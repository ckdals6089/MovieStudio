{"version":3,"sources":["components/config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/Commons/MainImage.js","components/views/Commons/GridCards.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetail/Sections/LikeDislikes.js","components/views/MovieDetail/Sections/SingleComment.js","components/views/MovieDetail/Sections/ReplyComment.js","components/views/MovieDetail/Sections/Comments.js","components/views/MovieDetail/Sections/MovieInfo.js","components/views/MovieDetail/Sections/Favorite.js","components/views/MovieDetail/MovieDetail.js","components/views/FavoritePage/FavoritePage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","dispatch","useDispatch","useEffect","console","log","isAuth","isAdmin","history","push","MainImage","style","background","image","height","backgroundSize","backgroundPosition","width","position","className","title","text","GridCards","landingPage","lg","md","xs","href","movieId","src","alt","movieName","characterName","LandingPage","useState","Movies","setMovies","MainMovieImage","setMainMovieImage","CurrentPage","setCurrentPage","endPoint","fetchMovies","fetch","json","results","page","backdrop_path","original_title","overview","gutter","map","movie","index","Fragment","key","poster_path","id","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","Item","prefix","placeholder","value","onChange","onBlur","checked","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","useHistory","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","Menu","SubMenu","ItemGroup","LeftMenu","mode","user","useSelector","state","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","LikeDislikes","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DislikeAction","setDislikeAction","variable","commentId","Axios","likes","length","like","dislikes","dislike","theme","TextArea","Input","SingleComment","CommentValue","setCommentValue","OpenReply","setOpenReply","e","preventDefault","variables","writer","_id","postId","responseTo","comment","content","refreshFunction","result","actions","author","avatar","currentTarget","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","CommentLists","fontSize","margin","color","Comments","Comment","setComment","movieTitle","display","justifyContent","alignItems","MovieInfo","bordered","release_date","revenue","runtime","vote_average","vote_count","popularity","Favorite","userFrom","movieInfo","moviePost","movieRunTime","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","favoriteNumber","favorited","MovieDetailPage","match","params","Movie","setMovie","Casts","setCasts","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","ActorToggle","setActorToggle","movieVariable","endpointForMovieInfo","fetchDetailInfo","comments","endpoint","endpointForCasts","cast","error","profile_path","newComment","concat","FavoritePage","Favorites","setFavorites","fetchFavoredMovie","favorites","renderCards","favorite","onClickDelete","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","MovieDetail","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.cc5b61b3.chunk.js","sourcesContent":["//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\nexport const API_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'd7d15cf489659114dc576afd9c6dde66';\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\n\n//Sizes: w300, w780, w1280, original\nexport const BACKDROP_SIZE = 'w1280'\nexport const IMAGE_SIZE = 'w1280'\n\n// w92, w154, w185, w342, w500, w780, original\nexport const POSTER_SIZE = 'w500'\n\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/config.js';\n\nexport function registerUser(dataToSubmit) {\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit) {\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth() {\n    const request = axios.get(`${USER_SERVER}/auth`)\n        .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser() {\n    const request = axios.get(`${USER_SERVER}/logout`)\n        .then(response => response.data)\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';","\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { auth } from '../_actions/user_actions'\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n\n    function AuthenticationCheck(props) {\n        const dispatch = useDispatch();\n        useEffect(() => {\n            dispatch(auth()).then(response => {\n                console.log(response)\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status\n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                        //Logged in Status, but Try to go into log in page \n                    } else {\n                        if (option === false)\n                            props.history.push('/')\n                    }\n                }\n            })\n        }, [])\n        return (\n            <SpecificComponent {...props} />\n        )\n    }\n    return AuthenticationCheck\n}","import React from 'react';\nimport './mainImage.css';\nfunction MainImage(props) {\n    return (\n        <div style={{\n            background: `linear-gradient(to bottom, rgba(0,0,0,0)\n        39%,rgba(0,0,0,0)\n        41%,rgba(0,0,0,0.65)\n        100%),\n        url('${props.image}'), #1c1c1c`,\n            height: '500px',\n            backgroundSize: '100%, cover',\n            backgroundPosition: 'center, center',\n            width: '100%',\n            position: 'relative'\n        }}>\n            <div>\n                <div className=\"mainPageDiv\">\n                    <h2 className=\"mainH2\">{props.title} </h2>\n                    <p className=\"mainP\">{props.text}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default MainImage","import React from 'react'\nimport { Col } from 'antd';\nimport './gridCard.css';\n\nfunction GridCards(props) {\n\n    if (props.landingPage) {\n        return (\n            <Col lg={6} md={8} xs={24}>\n                <div className=\"grdiCardDiv\">\n                    <a href={`/movie/${props.movieId}`} >\n                        <img className=\"gridCardImage\" src={props.image} alt={props.movieName} />\n                    </a>\n                </div>\n            </Col >\n        )\n    } else {\n        return (\n            <Col lg={6} md={8} xs={24}>\n                <div className=\"grdiCardDiv\">\n                    <img className=\"gridCardImage\" src={props.image} alt={props.characterName} />\n                </div>\n            </Col>\n        )\n    }\n\n}\n\nexport default GridCards","import React, { useEffect, useState } from 'react'\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../config';\nimport MainImage from '../Commons/MainImage';\nimport GridCards from '../Commons/GridCards';\nimport axios from 'axios';\nimport { Row } from 'antd';\nimport { useSelector } from \"react-redux\";\nimport './landingPage.css';\n\nfunction LandingPage() {\n    const [Movies, setMovies] = useState([])\n    const [MainMovieImage, setMainMovieImage] = useState(null)\n    const [CurrentPage, setCurrentPage] = useState(0)\n\n    //difine endPoint for access movie DB with API URL and API KEY\n    useEffect(() => {\n        const endPoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n        fetchMovies(endPoint)\n    }, [])\n\n    //if success to fetch movies, update useState(Movies, MainMovieImage, CurrentPage)\n    const fetchMovies = (endPoint) => {\n        fetch(endPoint)\n            .then(response => response.json())\n            .then(response => {\n                setMovies([...Movies, ...response.results])\n                setMainMovieImage(response.results[0])\n                setCurrentPage(response.page)\n            })\n    }\n\n    //declare LoadMore Moives \n    const loadMoreItems = () => {\n        const endPoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${CurrentPage + 1}`;\n        fetchMovies(endPoint)\n    }\n\n\n    return (\n        <div className=\"landingPageDiv\">\n            {/* Main Image */}\n            {/* If MainMovieIamge is true, display MainImage on lfandingPage*/}\n            {MainMovieImage &&\n                <MainImage\n                    image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`}\n                    title={MainMovieImage.original_title}\n                    text={MainMovieImage.overview}\n                />\n            }\n            <div className=\"landingPageMoiveList\">\n                <h2>Movies by latest</h2>\n                <hr />\n                {/* Movie Grid Cards */}\n                <Row gutter={[16, 16]} >\n                    {Movies && Movies.map((movie, index) => (\n                        <React.Fragment key={index}>\n                            <GridCards\n                                landingPage\n                                image={movie.poster_path ?\n                                    `${IMAGE_BASE_URL}w500${movie.poster_path}` : null}\n                                movieId={movie.id}\n                                movieName={movie.original_title}\n                            />\n                        </React.Fragment>\n                    ))}\n                </Row>\n            </div>\n            {/* Button for extending Movie list */}\n            <div className=\"landingPageLoadMore\">\n                <button onClick={loadMoreItems}> Load More</button>\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport './loginPage.css'\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} className=\"loginPageForm\">\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" className=\"loginPageInput\" />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" className=\"loginPageInput\" />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p className=\"loginFormP\">{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" className=\"loginFromItem\">\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);","import React from \"react\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  let history = useHistory();\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              // props.history.push(\"/login\");\n              history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"mail\">\n        <a href=\"/\">Home</a>\n      </Menu.Item>\n      <Menu.Item key=\"favorite\">\n        <a href=\"/favorite\">Favorite</a>\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default LeftMenu","import React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n    const user = useSelector(state => state.user)\n\n    const logoutHandler = () => {\n        axios.get(`${USER_SERVER}/logout`).then(response => {\n            if (response.status === 200) {\n                props.history.push(\"/login\");\n            } else {\n                alert('Log Out Failed')\n            }\n        });\n    };\n\n    if (user.userData && !user.userData.isAuth) {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"mail\">\n                    <a href=\"/login\">Signin</a>\n                </Menu.Item>\n                <Menu.Item key=\"app\">\n                    <a href=\"/register\">Signup</a>\n                </Menu.Item>\n            </Menu>\n        )\n    } else {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"logout\">\n                    <a onClick={logoutHandler}>Logout</a>\n                </Menu.Item>\n            </Menu>\n        )\n    }\n}\n\nexport default withRouter(RightMenu);","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/NavBar.css'\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Ben Studio</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport { Icon } from 'antd';\nimport './footer.css';\n\nfunction Footer() {\n    return (\n        <div className=\"footerdiv\">\n            <p> Created By BEN  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer","import React, { useEffect, useState } from 'react'\nimport { Tooltip, Icon } from 'antd';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport './sections.css';\nfunction LikeDislikes(props) {\n    const user = useSelector(state => state.user)\n\n    const [Likes, setLikes] = useState(0)\n    const [Dislikes, setDislikes] = useState(0)\n    const [LikeAction, setLikeAction] = useState(null)\n    const [DislikeAction, setDislikeAction] = useState(null)\n    let variable = {};\n\n    if (props.movie) {\n        variable = { movieId: props.movieId, userId: props.userId }\n    } else {\n        variable = { commentId: props.commentId, userId: props.userId }\n    }\n    useEffect(() => {\n        Axios.post('/api/like/getLikes', variable)\n            .then(response => {\n                console.log('getLikes', response.data)\n                if (response.data.success) {\n                    //How many likes does this movie or comment have \n                    setLikes(response.data.likes.length)\n                    //if I already click this like button or not \n                    response.data.likes.map(like => {\n                        if (like.userId === props.userId) {\n                            setLikeAction('liked')\n                        }\n                    })\n                } else {\n                    alert('Failed to get likes')\n                }\n            })\n        Axios.post('/api/like/getDislikes', variable)\n            .then(response => {\n                console.log('getDislike', response.data)\n                if (response.data.success) {\n                    //How many likes does this movie or comment have \n                    setDislikes(response.data.dislikes.length)\n                    //if I already click this like button or not \n                    response.data.dislikes.map(dislike => {\n                        if (dislike.userId === props.userId) {\n                            setDislikeAction('disliked')\n                        }\n                    })\n                } else {\n                    alert('Failed to get dislikes')\n                }\n            })\n    }, [])\n\n\n    const onLike = () => {\n        if (user.userData && !user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n        if (LikeAction === null) {\n            Axios.post('/api/like/upLike', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        setLikes(Likes + 1)\n                        setLikeAction('liked')\n                        //If dislike button is already clicked\n                        if (DislikeAction !== null) {\n                            setDislikeAction(null)\n                            setDislikes(Dislikes - 1)\n                        }\n                    } else {\n                        alert('Failed to increase the like')\n                    }\n                })\n        } else {\n            Axios.post('/api/like/unLike', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        setLikes(Likes - 1)\n                        setLikeAction(null)\n                    } else {\n                        alert('Failed to decrease the like')\n                    }\n                })\n        }\n    }\n\n    const onDisLike = () => {\n        if (user.userData && !user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n        if (DislikeAction !== null) {\n            Axios.post('/api/like/unDisLike', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        setDislikes(Dislikes - 1)\n                        setDislikeAction(null)\n                    } else {\n                        alert('Failed to decrease dislike')\n                    }\n                })\n        } else {\n            Axios.post('/api/like/upDisLike', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        setDislikes(Dislikes + 1)\n                        setDislikeAction('disliked')\n                        //If dislike button is already clicked\n                        if (LikeAction !== null) {\n                            setLikeAction(null)\n                            setLikes(Likes - 1)\n                        }\n                    } else {\n                        alert('Failed to increase dislike')\n                    }\n                })\n        }\n    }\n    return (\n        <React.Fragment>\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    <Icon type=\"like\"\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\n                        onClick={onLike} />\n                </Tooltip>\n                <span className=\"likeDislikesSpan\">{Likes}</span>\n            </span>&nbsp;&nbsp;&nbsp;&nbsp;\n            <span key=\"comment-basic-dislike\">\n                <Tooltip title=\"Dislike\">\n                    <Icon\n                        type=\"dislike\"\n                        theme={DislikeAction === 'disliked' ? 'filled' : 'outlined'}\n                        onClick={onDisLike}\n                    />\n                </Tooltip>\n                <span className=\"likeDislikesSpan\">{Dislikes}</span>\n            </span>\n        </React.Fragment>\n    )\n}\n\nexport default LikeDislikes","import React, { useState } from 'react'\nimport { Comment, Avatar, Button, Input } from 'antd';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport LikeDislikes from './LikeDislikes';\nimport './sections.css';\nconst { TextArea } = Input;\nfunction SingleComment(props) {\n    const user = useSelector(state => state.user);\n    const [CommentValue, setCommentValue] = useState(\"\")\n    const [OpenReply, setOpenReply] = useState(false)\n\n    const handleChange = (e) => {\n        setCommentValue(e.currentTarget.value)\n    }\n    const openReply = () => {\n        setOpenReply(!OpenReply)\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const variables = {\n            writer: user.userData._id,\n            postId: props.postId,\n            responseTo: props.comment._id,\n            content: CommentValue\n        }\n        Axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setCommentValue(\"\")\n                    setOpenReply(!OpenReply)\n                    props.refreshFunction(response.data.result)\n                } else {\n                    alert('Failed to save Comment')\n                }\n            })\n    }\n    const actions = [\n        <LikeDislikes comment commentId={props.comment._id} userId={localStorage.getItem('userId')} />,\n        <span onClick={openReply} key=\"comment-basic-reply-to\">Reply to </span>\n    ]\n    return (\n        <div>\n            <Comment\n                actions={actions}\n                author={props.comment.writer.name}\n                avatar={\n                    <Avatar\n                        src={props.comment.writer.image}\n                        alt=\"image\"\n                    />\n                }\n                content={\n                    <p>\n                        {props.comment.content}\n                    </p>\n                }\n            ></Comment>\n            {OpenReply &&\n                <form className=\"singleCommentForm\" onSubmit={onSubmit}>\n                    <TextArea\n                        className=\"singleCommentTextArea\"\n                        onChange={handleChange}\n                        value={CommentValue}\n                        placeholder=\"write some comments\"\n                    />\n                    <br />\n                    <Button className=\"singleCommentBtn\" onClick={onSubmit}>Submit</Button>\n                </form>\n            }\n        </div>\n    )\n}\n\nexport default SingleComment","import React, { useEffect, useState } from 'react'\nimport SingleComment from './SingleComment';\nimport './sections.css';\n\nfunction ReplyComment(props) {\n\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\n    useEffect(() => {\n        let commentNumber = 0;\n        props.CommentLists.map((comment) => {\n            if (comment.responseTo === props.parentCommentId) {\n                commentNumber++\n            }\n        })\n        setChildCommentNumber(commentNumber)\n    }, [props.CommentLists, props.parentCommentId])\n    let renderReplyComment = (parentCommentId) =>\n        props.CommentLists.map((comment, index) => (\n            <React.Fragment>\n                {comment.responseTo === parentCommentId &&\n                    <div className=\"replyCommentDiv\">\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\n                        <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\n                    </div>\n                }\n            </React.Fragment>\n        ))\n    const handleChange = () => {\n        setOpenReplyComments(!OpenReplyComments)\n    }\n\n    return (\n        <div>\n            {ChildCommentNumber > 0 &&\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\n                    onClick={handleChange} >\n                    View {ChildCommentNumber} more comment(s)\n                </p>\n            }\n            {OpenReplyComments &&\n                renderReplyComment(props.parentCommentId)\n            }\n        </div>\n    )\n}\n\nexport default ReplyComment","import React, { useState } from 'react'\nimport { Button, Input, Typography, } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nimport './sections.css';\n\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\nfunction Comments(props) {\n    const user = useSelector(state => state.user)\n    const [Comment, setComment] = useState(\"\")\n\n    const handleChange = (e) => {\n        setComment(e.currentTarget.value)\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (user.userData && !user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n        const variables = {\n            content: Comment,\n            writer: user.userData._id,\n            postId: props.postId\n        }\n        console.log(variables)\n        axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setComment(\"\")\n                    props.refreshFunction(response.data.result)\n                } else {\n                    alert('Failed to save Comment')\n                }\n            })\n    }\n\n    return (\n        <div>\n            <br />\n            <Title level={3} > Share your opinions about {props.movieTitle} </Title>\n            <hr />\n            {/* Comment Lists  */}\n            {console.log(props.CommentLists)}\n            {props.CommentLists && props.CommentLists.map((comment, index) => (\n                (!comment.responseTo &&\n                    <React.Fragment>\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\n                        <ReplyComment CommentLists={props.CommentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\n                    </React.Fragment>\n                )\n            ))}\n            {props.CommentLists && props.CommentLists.length === 0 &&\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '200px' }} >\n                    Be the first one who shares your thought about this movie\n                </div>\n            }\n            {/* Root Comment Form */}\n            <form className=\"commentForm\" onSubmit={onSubmit}>\n                <TextArea\n                    className=\"commentTextArea\"\n                    onChange={handleChange}\n                    value={Comment}\n                    placeholder=\"write some comments\"\n                />\n                <br />\n                <Button className=\"commentBtn\" onClick={onSubmit}>Submit</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default Comments","import React from 'react'\nimport { Descriptions, Badge } from 'antd';\n\nfunction MovieInfo(props) {\n\n    let { movie } = props;\n\n    return (\n        <Descriptions title=\"Movie Info\" bordered>\n            <Descriptions.Item label=\"Title\">{movie.original_title}</Descriptions.Item>\n            <Descriptions.Item label=\"release_date\">{movie.release_date}</Descriptions.Item>\n            <Descriptions.Item label=\"revenue\">{movie.revenue}</Descriptions.Item>\n            <Descriptions.Item label=\"runtime\">{movie.runtime}</Descriptions.Item>\n            <Descriptions.Item label=\"vote_average\" span={2}>\n                {movie.vote_average}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"vote_count\">{movie.vote_count}</Descriptions.Item>\n            <Descriptions.Item label=\"status\">{movie.status}</Descriptions.Item>\n            <Descriptions.Item label=\"popularity\">{movie.popularity}</Descriptions.Item>\n        </Descriptions>\n    )\n}\n\nexport default MovieInfo","import React, { useEffect, useState } from 'react'\nimport Axios from 'axios'\nimport { Button } from 'antd';\n\nfunction Favorite(props) {\n    const movieId = props.movieId\n    const userFrom = props.userFrom\n    const movieTitle = props.movieInfo.title\n    const moviePost = props.movieInfo.backdrop_path\n    const movieRunTime = props.movieInfo.runtime\n\n\n    const [FavoriteNumber, setFavoriteNumber] = useState(0)\n    const [Favorited, setFavorited] = useState(false)\n    let variables = {\n        userFrom: userFrom,\n        movieId: movieId,\n        movieTitle: movieTitle,\n        moviePost: moviePost,\n        movieRunTime: movieRunTime\n    }\n    useEffect(() => {\n        Axios.post('/api/favorite/favoriteNumber', variables)\n            .then(response => {\n                setFavoriteNumber(response.data.favoriteNumber)\n                if (response.data.success) {\n                } else {\n                    alert('Cuold net access database for Favorite Number.')\n                }\n            })\n        Axios.post('/api/favorite/favorited', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setFavorited(response.data.favorited)\n                } else {\n                    alert('Could not access database')\n                }\n            })\n    }, [])\n    const onClickFavorite = () => {\n        if (Favorited) {\n            Axios.post('/api/favorite/removeFromFavorite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber - 1)\n                        setFavorited(!Favorited)\n                    } else {\n                        alert('Failed to delete the movie in Favortie List')\n                    }\n                })\n        } else {\n            Axios.post('/api/favorite/addToFavorite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber + 1)\n                        setFavorited(!Favorited)\n                    } else {\n                        alert('Failed to add the movie in Favortie List')\n                    }\n                })\n        }\n    }\n    return (\n        <div>\n            <Button onClick={onClickFavorite}>{Favorited ? \" Not Favorite\" : \"Add to Favorite \"}  {FavoriteNumber}  </Button>\n        </div>\n    )\n}\n\nexport default Favorite","import React, { useEffect, useState } from 'react'\nimport { List, Avatar, Row, Col, Button } from 'antd';\nimport axios from 'axios';\n\nimport Comments from './Sections/Comments'\nimport LikeDislikes from './Sections/LikeDislikes';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, IMAGE_SIZE } from '../../config'\nimport GridCards from '../Commons/GridCards';\nimport MainImage from '../Commons/MainImage';\nimport MovieInfo from './Sections/MovieInfo';\nimport Favorite from './Sections/Favorite';\nimport './movieDetail.css';\n\nfunction MovieDetailPage(props) {\n    const movieId = props.match.params.movieId\n    console.log(props.match)\n    const [Movie, setMovie] = useState([])\n    const [Casts, setCasts] = useState([])\n    const [CommentLists, setCommentLists] = useState([])\n    const [LoadingForMovie, setLoadingForMovie] = useState(true)\n    const [LoadingForCasts, setLoadingForCasts] = useState(true)\n    const [ActorToggle, setActorToggle] = useState(false)\n    const movieVariable = {\n        movieId: movieId\n    }\n\n    useEffect(() => {\n        let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n        fetchDetailInfo(endpointForMovieInfo)\n        axios.post('/api/comment/getComments', movieVariable)\n            .then(response => {\n                console.log(response)\n                if (response.data.success) {\n                    console.log('response.data.comments', response.data.comments)\n                    setCommentLists(response.data.comments)\n                } else {\n                    alert('Failed to get comments Info')\n                }\n            })\n    }, [])\n    const toggleActorView = () => {\n        setActorToggle(!ActorToggle)\n    }\n    const fetchDetailInfo = (endpoint) => {\n        fetch(endpoint)\n            .then(result => result.json())\n            .then(result => {\n                console.log(result)\n                setMovie(result)\n                setLoadingForMovie(false)\n                let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n                fetch(endpointForCasts)\n                    .then(result => result.json())\n                    .then(result => {\n                        console.log(result)\n                        setCasts(result.cast)\n                    })\n                setLoadingForCasts(false)\n            })\n            .catch(error => console.error('Error:', error)\n            )\n    }\n\n    const updateComment = (newComment) => {\n        setCommentLists(CommentLists.concat(newComment))\n    }\n    return (\n        <div>\n            {/* Header */}\n            {!LoadingForMovie ?\n                <MainImage\n                    image={`${IMAGE_BASE_URL}${IMAGE_SIZE}${Movie.backdrop_path}`}\n                    title={Movie.original_title}\n                    text={Movie.overview}\n                />\n                :\n                <div>loading...</div>\n            }\n            {/* Body */}\n            <div className=\"detailDiv\">\n                <div className=\"detailDivDiv\">\n                    <Favorite movieInfo={Movie} movieId={movieId} userFrom={localStorage.getItem('userId')} />\n                </div>\n\n                {/* Movie Info */}\n                {!LoadingForMovie ?\n                    <MovieInfo movie={Movie} />\n                    :\n                    <div>loading...</div>\n                }\n                <br />\n                {/* Actors Grid*/}\n                <div className=\"detailActorGridDiv\">\n                    <Button onClick={toggleActorView}>Toggle Actor View </Button>\n                </div>\n                {ActorToggle &&\n                    <Row gutter={[16, 16]}>\n                        {\n                            !LoadingForCasts ? Casts.map((cast, index) => (\n                                cast.profile_path &&\n                                <GridCards\n                                    image={cast.profile_path ?\n                                        `${IMAGE_BASE_URL}w500${cast.profile_path}` : null}\n                                    characterName={cast.name}\n                                />)) :\n                                <div>loading...</div>\n                        }\n                    </Row>\n                }\n                <br />\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <LikeDislikes movie movieId={movieId} userId={localStorage.getItem('userId')} />\n                </div>\n                {/* Comments */}\n                <Comments movieTitle={Movie.original_title} CommentLists={CommentLists} postId={movieId} refreshFunction={updateComment} />\n            </div>\n        </div>\n    )\n}\n\nexport default MovieDetailPage","import React, { useEffect, useState } from 'react'\nimport './favorite.css';\nimport Axios from 'axios';\nimport { Popover } from 'antd';\nimport { IMAGE_BASE_URL } from '../../config';\n\nfunction FavoritePage() {\n    const [Favorites, setFavorites] = useState([])\n    useEffect(() => {\n        fetchFavoredMovie()\n    }, [])\n\n    const fetchFavoredMovie = () => {\n        Axios.post('/api/favorite/getFavoredMovie', { userFrom: localStorage.getItem('userId') })\n            .then(response => {\n                if (response.data.success) {\n                    setFavorites(response.data.favorites)\n                } else {\n                    alert('Failed to access Database for getting the movie information')\n                }\n            })\n    }\n\n    const onClickDelete = (movieId, userFrom) => {\n        const variables = {\n            movieId,\n            userFrom\n        }\n        Axios.post('/api/favorite/removeFromFavorite', variables)\n            .then(response => {\n                if (response.data.success) {\n                    fetchFavoredMovie()\n                } else {\n                    alert(\"Faile to delete the movie from List.\")\n                }\n            })\n    }\n\n    const renderCards = Favorites.map((favorite, index) => {\n        return <tr key={index}>\n            <td>{favorite.moviePost ?\n                <img src={`${IMAGE_BASE_URL}w300${favorite.moviePost}`} /> : \"no image\"}</td>\n            <td>{favorite.movieTitle}</td>\n            <td>{favorite.movieRunTime} mins</td>\n            <td><button onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}>Remove</button></td>\n        </tr>\n    })\n\n    return (\n        <div className=\"favoriteDiv\">\n            <h2> Favorite Movies </h2>\n            <hr />\n            <table>\n                <thead>\n                    <tr>\n                        <th>Movie Poster</th>\n                        <th>Movie Title</th>\n                        <th>Movie RunTime</th>\n                        <td>Remove from favorites</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderCards}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default FavoritePage","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth.js\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar.js\";\nimport Footer from \"./views/Footer/Footer.js\"\nimport MovieDetail from \"./views/MovieDetail/MovieDetail.js\";\nimport FavoritePage from \"./views/FavoritePage/FavoritePage.js\";\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/movie/:movieId\" component={Auth(MovieDetail, null)} />\n          <Route exact path=\"/favorite\" component={Auth(FavoritePage, true)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if ('serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case REGISTER_USER:\n            return { ...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return { ...state, userData: action.payload }\n        case LOGOUT_USER:\n            return { ...state }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './master.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}