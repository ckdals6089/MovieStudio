{"version":3,"sources":["components/config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/Commons/MainImage.js","components/views/Commons/GridCards.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetail/Sections/LikeDislikes.js","components/views/MovieDetail/Sections/SingleComment.js","components/views/MovieDetail/Sections/ReplyComment.js","components/views/MovieDetail/Sections/Comments.js","components/views/MovieDetail/Sections/MovieInfo.js","components/views/MovieDetail/Sections/Favorite.js","components/views/MovieDetail/MovieDetail.js","components/views/FavoritePage/FavoritePage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","dispatch","useDispatch","useEffect","console","log","isAuth","isAdmin","history","push","MainImage","style","background","image","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","title","fontSize","text","GridCards","landingPage","lg","md","xs","href","movieId","src","alt","movieName","characterName","LandingPage","useState","Movies","setMovies","MainMovieImage","setMainMovieImage","CurrentPage","setCurrentPage","endPoint","fetchMovies","fetch","json","results","page","margin","backdrop_path","original_title","overview","gutter","map","movie","index","Fragment","key","poster_path","id","display","justifyContent","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","Item","prefix","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","useHistory","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","Menu","SubMenu","ItemGroup","LeftMenu","mode","user","useSelector","state","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","flexDirection","alignItems","LikeDislikes","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DislikeAction","setDislikeAction","variable","commentId","Axios","likes","length","like","dislikes","dislike","theme","paddingLeft","cursor","TextArea","Input","SingleComment","CommentValue","setCommentValue","OpenReply","setOpenReply","e","preventDefault","variables","writer","_id","postId","responseTo","comment","content","refreshFunction","result","actions","author","avatar","currentTarget","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","CommentLists","Comments","Comment","setComment","movieTitle","MovieInfo","bordered","release_date","revenue","runtime","vote_average","vote_count","popularity","Favorite","userFrom","movieInfo","moviePost","movieRunTime","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","favoriteNumber","favorited","MovieDetailPage","match","params","Movie","setMovie","Casts","setCasts","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","ActorToggle","setActorToggle","movieVariable","endpointForMovieInfo","fetchDetailInfo","comments","endpoint","endpointForCasts","cast","error","profile_path","newComment","concat","FavoritePage","Favorites","setFavorites","fetchFavoredMovie","favorites","renderCards","favorite","onClickDelete","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","MovieDetail","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.362d8f8e.chunk.js","sourcesContent":["//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\nexport const API_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'd7d15cf489659114dc576afd9c6dde66';\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\n\n//Sizes: w300, w780, w1280, original\nexport const BACKDROP_SIZE = 'w1280'\nexport const IMAGE_SIZE = 'w1280'\n\n// w92, w154, w185, w342, w500, w780, original\nexport const POSTER_SIZE = 'w500'\n\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/config.js';\n\nexport function registerUser(dataToSubmit) {\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit) {\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth() {\n    const request = axios.get(`${USER_SERVER}/auth`)\n        .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser() {\n    const request = axios.get(`${USER_SERVER}/logout`)\n        .then(response => response.data)\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';","\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { auth } from '../_actions/user_actions'\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n\n    function AuthenticationCheck(props) {\n        const dispatch = useDispatch();\n        useEffect(() => {\n            dispatch(auth()).then(response => {\n                console.log(response)\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status\n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                        //Logged in Status, but Try to go into log in page \n                    } else {\n                        if (option === false)\n                            props.history.push('/')\n                    }\n                }\n            })\n        }, [])\n        return (\n            <SpecificComponent {...props} />\n        )\n    }\n    return AuthenticationCheck\n}","import React from 'react';\n\nfunction MainImage(props) {\n    return (\n        <div style={{\n            background: `linear-gradient(to bottom, rgba(0,0,0,0)\n        39%,rgba(0,0,0,0)\n        41%,rgba(0,0,0,0.65)\n        100%),\n        url('${props.image}'), #1c1c1c`,\n            height: '500px',\n            backgroundSize: '100%, cover',\n            backgroundPosition: 'center, center',\n            width: '100%',\n            position: 'relative'\n        }}>\n            <div>\n                <div style={{ position: 'absolute', maxWidth: '500px', bottom: '2rem', marginLeft: '2rem' }}>\n                    <h2 style={{ color: 'white' }}>  {props.title} </h2>\n                    <p style={{ color: 'white', fontSize: '1rem' }}> {props.text}</p>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default MainImage","import React from 'react'\nimport { Col } from 'antd';\nfunction GridCards(props) {\n\n    if (props.landingPage) {\n        return (\n            <Col lg={6} md={8} xs={24}>\n                <div style={{ position: 'relative' }}>\n                    <a href={`/movie/${props.movieId}`} >\n                        <img style={{ width: '100%', height: '320px' }} src={props.image} alt={props.movieName} />\n                    </a>\n                </div>\n            </Col >\n        )\n    } else {\n        return (\n            <Col lg={6} md={8} xs={24}>\n                <div style={{ position: 'relative' }}>\n\n                    <img style={{ width: '100%', height: '320px' }} src={props.image} alt={props.characterName} />\n\n                </div>\n            </Col>\n        )\n    }\n\n}\n\nexport default GridCards","import React, { useEffect, useState } from 'react'\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../config';\nimport MainImage from '../Commons/MainImage';\nimport GridCards from '../Commons/GridCards';\nimport axios from 'axios';\nimport { Row } from 'antd';\nimport { useSelector } from \"react-redux\";\n\n\nfunction LandingPage() {\n    const [Movies, setMovies] = useState([])\n    const [MainMovieImage, setMainMovieImage] = useState(null)\n    const [CurrentPage, setCurrentPage] = useState(0)\n\n    //difine endPoint for access movie DB with API URL and API KEY\n    useEffect(() => {\n        const endPoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n        fetchMovies(endPoint)\n    }, [])\n\n    //if success to fetch movies, update useState(Movies, MainMovieImage, CurrentPage)\n    const fetchMovies = (endPoint) => {\n        fetch(endPoint)\n            .then(response => response.json())\n            .then(response => {\n                setMovies([...Movies, ...response.results])\n                setMainMovieImage(response.results[0])\n                setCurrentPage(response.page)\n            })\n    }\n\n    //declare LoadMore Moives \n    const loadMoreItems = () => {\n        const endPoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${CurrentPage + 1}`;\n        fetchMovies(endPoint)\n    }\n\n\n    return (\n        <div style={{ width: '100%', margin: '0' }}>\n            {/* Main Image */}\n            {/* If MainMovieIamge is true, display MainImage on lfandingPage*/}\n            {MainMovieImage &&\n                <MainImage\n                    image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`}\n                    title={MainMovieImage.original_title}\n                    text={MainMovieImage.overview}\n                />\n            }\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <h2>Movies by latest</h2>\n                <hr />\n                {/* Movie Grid Cards */}\n                <Row gutter={[16, 16]} >\n                    {Movies && Movies.map((movie, index) => (\n                        <React.Fragment key={index}>\n                            <GridCards\n                                landingPage\n                                image={movie.poster_path ?\n                                    `${IMAGE_BASE_URL}w500${movie.poster_path}` : null}\n                                movieId={movie.id}\n                                movieName={movie.original_title}\n                            />\n                        </React.Fragment>\n                    ))}\n                </Row>\n            </div>\n            {/* Button for extending Movie list */}\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button onClick={loadMoreItems}> Load More</button>\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);","import React from \"react\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  let history = useHistory();\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              // props.history.push(\"/login\");\n              history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"mail\">\n        <a href=\"/\">Home</a>\n      </Menu.Item>\n      <Menu.Item key=\"favorite\">\n        <a href=\"/favorite\">Favorite</a>\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default LeftMenu","import React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n    const user = useSelector(state => state.user)\n\n    const logoutHandler = () => {\n        axios.get(`${USER_SERVER}/logout`).then(response => {\n            if (response.status === 200) {\n                props.history.push(\"/login\");\n            } else {\n                alert('Log Out Failed')\n            }\n        });\n    };\n\n    if (user.userData && !user.userData.isAuth) {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"mail\">\n                    <a href=\"/login\">Signin</a>\n                </Menu.Item>\n                <Menu.Item key=\"app\">\n                    <a href=\"/register\">Signup</a>\n                </Menu.Item>\n            </Menu>\n        )\n    } else {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"logout\">\n                    <a onClick={logoutHandler}>Logout</a>\n                </Menu.Item>\n            </Menu>\n        )\n    }\n}\n\nexport default withRouter(RightMenu);","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/NavBar.css'\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Ben Studio</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport { Icon } from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize: '1rem'\n        }}>\n            <p> Created By BEN  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer","import React, { useEffect, useState } from 'react'\nimport { Tooltip, Icon } from 'antd';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nfunction LikeDislikes(props) {\n    const user = useSelector(state => state.user)\n\n    const [Likes, setLikes] = useState(0)\n    const [Dislikes, setDislikes] = useState(0)\n    const [LikeAction, setLikeAction] = useState(null)\n    const [DislikeAction, setDislikeAction] = useState(null)\n    let variable = {};\n\n    if (props.movie) {\n        variable = { movieId: props.movieId, userId: props.userId }\n    } else {\n        variable = { commentId: props.commentId, userId: props.userId }\n    }\n    useEffect(() => {\n        Axios.post('/api/like/getLikes', variable)\n            .then(response => {\n                console.log('getLikes', response.data)\n                if (response.data.success) {\n                    //How many likes does this movie or comment have \n                    setLikes(response.data.likes.length)\n                    //if I already click this like button or not \n                    response.data.likes.map(like => {\n                        if (like.userId === props.userId) {\n                            setLikeAction('liked')\n                        }\n                    })\n                } else {\n                    alert('Failed to get likes')\n                }\n            })\n        Axios.post('/api/like/getDislikes', variable)\n            .then(response => {\n                console.log('getDislike', response.data)\n                if (response.data.success) {\n                    //How many likes does this movie or comment have \n                    setDislikes(response.data.dislikes.length)\n                    //if I already click this like button or not \n                    response.data.dislikes.map(dislike => {\n                        if (dislike.userId === props.userId) {\n                            setDislikeAction('disliked')\n                        }\n                    })\n                } else {\n                    alert('Failed to get dislikes')\n                }\n            })\n    }, [])\n\n\n    const onLike = () => {\n        if (user.userData && !user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n        if (LikeAction === null) {\n            Axios.post('/api/like/upLike', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        setLikes(Likes + 1)\n                        setLikeAction('liked')\n                        //If dislike button is already clicked\n                        if (DislikeAction !== null) {\n                            setDislikeAction(null)\n                            setDislikes(Dislikes - 1)\n                        }\n                    } else {\n                        alert('Failed to increase the like')\n                    }\n                })\n        } else {\n            Axios.post('/api/like/unLike', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        setLikes(Likes - 1)\n                        setLikeAction(null)\n                    } else {\n                        alert('Failed to decrease the like')\n                    }\n                })\n        }\n    }\n\n    const onDisLike = () => {\n        if (user.userData && !user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n        if (DislikeAction !== null) {\n            Axios.post('/api/like/unDisLike', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        setDislikes(Dislikes - 1)\n                        setDislikeAction(null)\n                    } else {\n                        alert('Failed to decrease dislike')\n                    }\n                })\n        } else {\n            Axios.post('/api/like/upDisLike', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        setDislikes(Dislikes + 1)\n                        setDislikeAction('disliked')\n                        //If dislike button is already clicked\n                        if (LikeAction !== null) {\n                            setLikeAction(null)\n                            setLikes(Likes - 1)\n                        }\n                    } else {\n                        alert('Failed to increase dislike')\n                    }\n                })\n        }\n    }\n    return (\n        <React.Fragment>\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    <Icon type=\"like\"\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\n                        onClick={onLike} />\n                </Tooltip>\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Likes}</span>\n            </span>&nbsp;&nbsp;&nbsp;&nbsp;\n            <span key=\"comment-basic-dislike\">\n                <Tooltip title=\"Dislike\">\n                    <Icon\n                        type=\"dislike\"\n                        theme={DislikeAction === 'disliked' ? 'filled' : 'outlined'}\n                        onClick={onDisLike}\n                    />\n                </Tooltip>\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Dislikes}</span>\n            </span>\n        </React.Fragment>\n    )\n}\n\nexport default LikeDislikes","import React, { useState } from 'react'\nimport { Comment, Avatar, Button, Input } from 'antd';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport LikeDislikes from './LikeDislikes';\nconst { TextArea } = Input;\nfunction SingleComment(props) {\n    const user = useSelector(state => state.user);\n    const [CommentValue, setCommentValue] = useState(\"\")\n    const [OpenReply, setOpenReply] = useState(false)\n\n    const handleChange = (e) => {\n        setCommentValue(e.currentTarget.value)\n    }\n    const openReply = () => {\n        setOpenReply(!OpenReply)\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const variables = {\n            writer: user.userData._id,\n            postId: props.postId,\n            responseTo: props.comment._id,\n            content: CommentValue\n        }\n        Axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setCommentValue(\"\")\n                    setOpenReply(!OpenReply)\n                    props.refreshFunction(response.data.result)\n                } else {\n                    alert('Failed to save Comment')\n                }\n            })\n    }\n    const actions = [\n        <LikeDislikes comment commentId={props.comment._id} userId={localStorage.getItem('userId')} />,\n        <span onClick={openReply} key=\"comment-basic-reply-to\">Reply to </span>\n    ]\n    return (\n        <div>\n            <Comment\n                actions={actions}\n                author={props.comment.writer.name}\n                avatar={\n                    <Avatar\n                        src={props.comment.writer.image}\n                        alt=\"image\"\n                    />\n                }\n                content={\n                    <p>\n                        {props.comment.content}\n                    </p>\n                }\n            ></Comment>\n            {OpenReply &&\n                <form style={{ display: 'flex' }} onSubmit={onSubmit}>\n                    <TextArea\n                        style={{ width: '100%', borderRadius: '5px' }}\n                        onChange={handleChange}\n                        value={CommentValue}\n                        placeholder=\"write some comments\"\n                    />\n                    <br />\n                    <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\n                </form>\n            }\n        </div>\n    )\n}\n\nexport default SingleComment","import React, { useEffect, useState } from 'react'\nimport SingleComment from './SingleComment';\n\nfunction ReplyComment(props) {\n\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\n    useEffect(() => {\n        let commentNumber = 0;\n        props.CommentLists.map((comment) => {\n            if (comment.responseTo === props.parentCommentId) {\n                commentNumber++\n            }\n        })\n        setChildCommentNumber(commentNumber)\n    }, [props.CommentLists, props.parentCommentId])\n    let renderReplyComment = (parentCommentId) =>\n        props.CommentLists.map((comment, index) => (\n            <React.Fragment>\n                {comment.responseTo === parentCommentId &&\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\n                        <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\n                    </div>\n                }\n            </React.Fragment>\n        ))\n    const handleChange = () => {\n        setOpenReplyComments(!OpenReplyComments)\n    }\n\n    return (\n        <div>\n            {ChildCommentNumber > 0 &&\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\n                    onClick={handleChange} >\n                    View {ChildCommentNumber} more comment(s)\n                </p>\n            }\n            {OpenReplyComments &&\n                renderReplyComment(props.parentCommentId)\n            }\n        </div>\n    )\n}\n\nexport default ReplyComment","import React, { useState } from 'react'\nimport { Button, Input, Typography, } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nconst { TextArea } = Input;\nconst { Title } = Typography;\nfunction Comments(props) {\n    const user = useSelector(state => state.user)\n    const [Comment, setComment] = useState(\"\")\n\n    const handleChange = (e) => {\n        setComment(e.currentTarget.value)\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (user.userData && !user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n        const variables = {\n            content: Comment,\n            writer: user.userData._id,\n            postId: props.postId\n        }\n        console.log(variables)\n        axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setComment(\"\")\n                    props.refreshFunction(response.data.result)\n                } else {\n                    alert('Failed to save Comment')\n                }\n            })\n    }\n\n    return (\n        <div>\n            <br />\n            <Title level={3} > Share your opinions about {props.movieTitle} </Title>\n            <hr />\n            {/* Comment Lists  */}\n            {console.log(props.CommentLists)}\n            {props.CommentLists && props.CommentLists.map((comment, index) => (\n                (!comment.responseTo &&\n                    <React.Fragment>\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\n                        <ReplyComment CommentLists={props.CommentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\n                    </React.Fragment>\n                )\n            ))}\n            {props.CommentLists && props.CommentLists.length === 0 &&\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '200px' }} >\n                    Be the first one who shares your thought about this movie\n                </div>\n            }\n            {/* Root Comment Form */}\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\n                <TextArea\n                    style={{ width: '100%', borderRadius: '5px' }}\n                    onChange={handleChange}\n                    value={Comment}\n                    placeholder=\"write some comments\"\n                />\n                <br />\n                <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default Comments","import React from 'react'\nimport { Descriptions, Badge } from 'antd';\n\nfunction MovieInfo(props) {\n\n    let { movie } = props;\n\n    return (\n        <Descriptions title=\"Movie Info\" bordered>\n            <Descriptions.Item label=\"Title\">{movie.original_title}</Descriptions.Item>\n            <Descriptions.Item label=\"release_date\">{movie.release_date}</Descriptions.Item>\n            <Descriptions.Item label=\"revenue\">{movie.revenue}</Descriptions.Item>\n            <Descriptions.Item label=\"runtime\">{movie.runtime}</Descriptions.Item>\n            <Descriptions.Item label=\"vote_average\" span={2}>\n                {movie.vote_average}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"vote_count\">{movie.vote_count}</Descriptions.Item>\n            <Descriptions.Item label=\"status\">{movie.status}</Descriptions.Item>\n            <Descriptions.Item label=\"popularity\">{movie.popularity}</Descriptions.Item>\n        </Descriptions>\n    )\n}\n\nexport default MovieInfo","import React, { useEffect, useState } from 'react'\nimport Axios from 'axios'\nimport { Button } from 'antd';\n\nfunction Favorite(props) {\n    const movieId = props.movieId\n    const userFrom = props.userFrom\n    const movieTitle = props.movieInfo.title\n    const moviePost = props.movieInfo.backdrop_path\n    const movieRunTime = props.movieInfo.runtime\n\n\n    const [FavoriteNumber, setFavoriteNumber] = useState(0)\n    const [Favorited, setFavorited] = useState(false)\n    let variables = {\n        userFrom: userFrom,\n        movieId: movieId,\n        movieTitle: movieTitle,\n        moviePost: moviePost,\n        movieRunTime: movieRunTime\n    }\n    useEffect(() => {\n        Axios.post('/api/favorite/favoriteNumber', variables)\n            .then(response => {\n                setFavoriteNumber(response.data.favoriteNumber)\n                if (response.data.success) {\n                } else {\n                    alert('Cuold net access database for Favorite Number.')\n                }\n            })\n        Axios.post('/api/favorite/favorited', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setFavorited(response.data.favorited)\n                } else {\n                    alert('Could not access database')\n                }\n            })\n    }, [])\n    const onClickFavorite = () => {\n        if (Favorited) {\n            Axios.post('/api/favorite/removeFromFavorite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber - 1)\n                        setFavorited(!Favorited)\n                    } else {\n                        alert('Failed to delete the movie in Favortie List')\n                    }\n                })\n        } else {\n            Axios.post('/api/favorite/addToFavorite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber + 1)\n                        setFavorited(!Favorited)\n                    } else {\n                        alert('Failed to add the movie in Favortie List')\n                    }\n                })\n        }\n    }\n    return (\n        <div>\n            <Button onClick={onClickFavorite}>{Favorited ? \" Not Favorite\" : \"Add to Favorite \"}  {FavoriteNumber}  </Button>\n        </div>\n    )\n}\n\nexport default Favorite","import React, { useEffect, useState } from 'react'\nimport { List, Avatar, Row, Col, Button } from 'antd';\nimport axios from 'axios';\n\nimport Comments from './Sections/Comments'\nimport LikeDislikes from './Sections/LikeDislikes';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, IMAGE_SIZE } from '../../config'\nimport GridCards from '../Commons/GridCards';\nimport MainImage from '../Commons/MainImage';\nimport MovieInfo from './Sections/MovieInfo';\nimport Favorite from './Sections/Favorite';\n\nfunction MovieDetailPage(props) {\n    const movieId = props.match.params.movieId\n    console.log(props.match)\n    const [Movie, setMovie] = useState([])\n    const [Casts, setCasts] = useState([])\n    const [CommentLists, setCommentLists] = useState([])\n    const [LoadingForMovie, setLoadingForMovie] = useState(true)\n    const [LoadingForCasts, setLoadingForCasts] = useState(true)\n    const [ActorToggle, setActorToggle] = useState(false)\n    const movieVariable = {\n        movieId: movieId\n    }\n\n    useEffect(() => {\n        let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n        fetchDetailInfo(endpointForMovieInfo)\n        axios.post('/api/comment/getComments', movieVariable)\n            .then(response => {\n                console.log(response)\n                if (response.data.success) {\n                    console.log('response.data.comments', response.data.comments)\n                    setCommentLists(response.data.comments)\n                } else {\n                    alert('Failed to get comments Info')\n                }\n            })\n    }, [])\n    const toggleActorView = () => {\n        setActorToggle(!ActorToggle)\n    }\n    const fetchDetailInfo = (endpoint) => {\n        fetch(endpoint)\n            .then(result => result.json())\n            .then(result => {\n                console.log(result)\n                setMovie(result)\n                setLoadingForMovie(false)\n                let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n                fetch(endpointForCasts)\n                    .then(result => result.json())\n                    .then(result => {\n                        console.log(result)\n                        setCasts(result.cast)\n                    })\n                setLoadingForCasts(false)\n            })\n            .catch(error => console.error('Error:', error)\n            )\n    }\n\n    const updateComment = (newComment) => {\n        setCommentLists(CommentLists.concat(newComment))\n    }\n    return (\n        <div>\n            {/* Header */}\n            {!LoadingForMovie ?\n                <MainImage\n                    image={`${IMAGE_BASE_URL}${IMAGE_SIZE}${Movie.backdrop_path}`}\n                    title={Movie.original_title}\n                    text={Movie.overview}\n                />\n                :\n                <div>loading...</div>\n            }\n            {/* Body */}\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                    <Favorite movieInfo={Movie} movieId={movieId} userFrom={localStorage.getItem('userId')} />\n                </div>\n\n                {/* Movie Info */}\n                {!LoadingForMovie ?\n                    <MovieInfo movie={Movie} />\n                    :\n                    <div>loading...</div>\n                }\n                <br />\n                {/* Actors Grid*/}\n                <div style={{ display: 'flex', justifyContent: 'center', margin: '2rem' }}>\n                    <Button onClick={toggleActorView}>Toggle Actor View </Button>\n                </div>\n                {ActorToggle &&\n                    <Row gutter={[16, 16]}>\n                        {\n                            !LoadingForCasts ? Casts.map((cast, index) => (\n                                cast.profile_path &&\n                                <GridCards\n                                    image={cast.profile_path ?\n                                        `${IMAGE_BASE_URL}w500${cast.profile_path}` : null}\n                                    characterName={cast.name}\n                                />)) :\n                                <div>loading...</div>\n                        }\n                    </Row>\n                }\n                <br />\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <LikeDislikes movie movieId={movieId} userId={localStorage.getItem('userId')} />\n                </div>\n                {/* Comments */}\n                <Comments movieTitle={Movie.original_title} CommentLists={CommentLists} postId={movieId} refreshFunction={updateComment} />\n            </div>\n        </div>\n    )\n}\n\nexport default MovieDetailPage","import React, { useEffect, useState } from 'react'\nimport './favorite.css';\nimport Axios from 'axios';\nimport { Popover } from 'antd';\nimport { IMAGE_BASE_URL } from '../../config';\n\nfunction FavoritePage() {\n    const [Favorites, setFavorites] = useState([])\n    useEffect(() => {\n        fetchFavoredMovie()\n    }, [])\n\n    const fetchFavoredMovie = () => {\n        Axios.post('/api/favorite/getFavoredMovie', { userFrom: localStorage.getItem('userId') })\n            .then(response => {\n                if (response.data.success) {\n                    setFavorites(response.data.favorites)\n                } else {\n                    alert('Failed to access Database for getting the movie information')\n                }\n            })\n    }\n\n    const onClickDelete = (movieId, userFrom) => {\n        const variables = {\n            movieId,\n            userFrom\n        }\n        Axios.post('/api/favorite/removeFromFavorite', variables)\n            .then(response => {\n                if (response.data.success) {\n                    fetchFavoredMovie()\n                } else {\n                    alert(\"Faile to delete the movie from List.\")\n                }\n            })\n    }\n\n    const renderCards = Favorites.map((favorite, index) => {\n        return <tr key={index}>\n            <td>{favorite.moviePost ?\n                <img src={`${IMAGE_BASE_URL}w300${favorite.moviePost}`} /> : \"no image\"}</td>\n            <td>{favorite.movieTitle}</td>\n            <td>{favorite.movieRunTime} mins</td>\n            <td><button onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}>Remove</button></td>\n        </tr>\n    })\n\n    return (\n        <div style={{ width: '85%', margin: '3rem auto' }}>\n            <h2> Favorite Movies </h2>\n            <hr />\n            <table>\n                <thead>\n                    <tr>\n                        <th>Movie Poster</th>\n                        <th>Movie Title</th>\n                        <th>Movie RunTime</th>\n                        <td>Remove from favorites</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderCards}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default FavoritePage","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth.js\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar.js\";\nimport Footer from \"./views/Footer/Footer.js\"\nimport MovieDetail from \"./views/MovieDetail/MovieDetail.js\";\nimport FavoritePage from \"./views/FavoritePage/FavoritePage.js\";\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/movie/:movieId\" component={Auth(MovieDetail, null)} />\n          <Route exact path=\"/favorite\" component={Auth(FavoritePage, true)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if ('serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case REGISTER_USER:\n            return { ...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return { ...state, userData: action.payload }\n        case LOGOUT_USER:\n            return { ...state }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}